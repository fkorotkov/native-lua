trigger:
  paths:
    exclude:
      - .vscode/*
      - .github/*
      - .appveyor.yml
      - .cirrus.yml
      - .editorconfig
      - .gitattributes
      - .gitignore
      - .readthedocs.yml
      - docs/environment.yml
      - pyproject.toml

variables:
  NATIVE_LUA_CI_BUILD: "TRUE"

jobs:
  - job: Linux
    displayName: "Linux Build"
    pool:
      vmImage: "ubuntu-18.04"
    variables:
      - name: lua_install_prefix
        value: /opt/lua
      - name: install_packages
        value: dialog apt-utils software-properties-common libreadline7 libreadline-dev build-essential doxygen graphviz
    strategy:
      matrix:
        gcc_include_tests:
          CC_LUA_BUILD: gcc
          CC_LUA_BUILD_OPTIONS: --include-tests
        gcc_include_tests_ltests:
          CC_LUA_BUILD: gcc
          CC_LUA_BUILD_OPTIONS: --include-tests --ltests
        clang_include_tests:
          CC_LUA_BUILD: clang
          CC_LUA_BUILD_OPTIONS: --include-tests
        clang_include_tests_ltests:
          CC_LUA_BUILD: clang
          CC_LUA_BUILD_OPTIONS: --include-tests --ltests
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.6"
          architecture: "x64"
      - displayName: Ubuntu details
        script: lsb_release -a
      - displayName: Add install path to $PATH
        script: echo "##vso[task.prependpath]/opt/lua/bin"
      - displayName: Verify $PATH
        script: echo $PATH
      - displayName: Installing common development tools
        script: sudo apt-get install -y ${{ variables.install_packages }}
      - displayName: Installing pip dependencies
        script: python -m pip install --upgrade pip && python -m pip install --upgrade --requirement requirements.txt
      - displayName: Install clang
        condition: eq(variables['CC_LUA_BUILD'], 'clang')
        script: |
          set -euxo pipefail
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-10 main"
          sudo apt-get update
          sudo apt-get install -y clang-10 lld-10
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 100
      - displayName: Compiler and Tool versions
        script: |
          python --version
          ${CC_LUA_BUILD} --version
          doxygen --version
          dot -V
          sphinx-build --version
      - displayName: Documentation build
        script: python waf configure build-docs clean-docs distclean -v
      - displayName: Configure, build, install
        script: python waf configure -v --check-c-compiler=${CC_LUA_BUILD} ${CC_LUA_BUILD_OPTIONS} --prefix=${{ variables.lua_install_prefix }} build install
      - displayName: Simple test
        workingDirectory: build/bin/tests
        script: lua -e"_U=true" all.lua
      - displayName: Full test
        workingDirectory: build/bin/tests
        script: lua all.lua
      - displayName: Uninstall, clean and distclean
        script: python waf uninstall clean distclean
